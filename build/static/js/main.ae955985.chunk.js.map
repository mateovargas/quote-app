{"version":3,"sources":["components/quotes/QuoteForm.module.css","components/layout/MainNavigation.module.css","components/comments/NewCommentForm.module.css","components/quotes/QuoteList.module.css","components/comments/Comments.module.css","components/UI/LoadingSpinner.module.css","components/comments/CommentItem.module.css","components/comments/CommentsList.module.css","components/quotes/HighlightedQuote.module.css","components/quotes/QuoteItem.module.css","components/quotes/NoQuotesFound.module.css","components/UI/Card.module.css","components/layout/Layout.module.css","hooks/use-http.js","lib/api.js","components/UI/LoadingSpinner.js","components/comments/NewCommentForm.js","components/comments/CommentItem.js","components/comments/CommentsList.js","components/comments/Comments.js","components/quotes/HighlightedQuote.js","components/pages/QuoteDetail.js","components/quotes/QuoteItem.js","components/quotes/QuoteList.js","components/quotes/NoQuotesFound.js","components/pages/AllQuotes.js","components/UI/Card.js","components/quotes/QuoteForm.js","components/pages/NewQuote.js","components/layout/MainNavigation.js","components/layout/Layout.js","components/pages/NotFound.js","App.js","index.js"],"names":["module","exports","httpReducer","state","action","type","data","error","status","responseData","errorMessage","useHttp","requestFunction","startWithPending","useReducer","httpState","dispatch","sendRequest","useCallback","requestData","a","message","FIREBASE_DOMAIN","getAllQuotes","fetch","response","json","ok","Error","key","transformedQuotes","quoteObj","id","push","getSingleQuote","quoteId","loadedQuote","addQuote","quoteData","method","body","JSON","stringify","headers","addComment","commentData","commentId","name","getAllComments","transformedComments","commentObj","LoadingSpinner","className","classes","spinner","NewCommentForm","props","commentTextRef","useRef","onAddedComment","useEffect","submitFormHandler","event","preventDefault","enteredText","current","value","text","form","onSubmit","control","htmlFor","rows","ref","actions","CommentItem","item","CommentsList","comments","map","comment","Comments","useState","isAddingComment","setIsAddingComment","params","useParams","loadedComments","addedCommentHandler","length","onClick","HighlightedQuote","quote","author","QuoteDetail","match","useRouteMatch","path","exact","to","url","QuoteItem","QuoteList","history","useHistory","location","useLocation","console","log","quotes","ascending","isSortingAscending","URLSearchParams","search","get","sortedQuotes","sort","quoteA","quoteB","sorting","pathname","list","NoQuotesFound","noquotes","AllQuotes","loadedQuotes","Card","card","children","QuoteForm","isEntering","setIsEntering","authorInputRef","textInputRef","when","onFocus","enteredAuthor","onAddQuote","isLoading","loading","NewQuote","MainNavigation","header","logo","nav","activeClassName","active","Layout","main","NotFound","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ae955985.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"QuoteForm_form__3Ndw9\",\"loading\":\"QuoteForm_loading__iDpS0\",\"control\":\"QuoteForm_control__2lCiE\",\"actions\":\"QuoteForm_actions__354La\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"MainNavigation_header__pcWBd\",\"logo\":\"MainNavigation_logo__3mTft\",\"nav\":\"MainNavigation_nav__2KJfX\",\"active\":\"MainNavigation_active__oN3Ka\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"NewCommentForm_form__2Te8b\",\"loading\":\"NewCommentForm_loading__2veC2\",\"control\":\"NewCommentForm_control__3NVeP\",\"actions\":\"NewCommentForm_actions__2fwWP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"QuoteList_list__3pzcl\",\"sorting\":\"QuoteList_sorting__rL6H1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"comments\":\"Comments_comments__iZX-v\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"spinner\":\"LoadingSpinner_spinner__2Kyqv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"CommentItem_item__24mbD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"comments\":\"CommentsList_comments__valp0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"quote\":\"HighlightedQuote_quote__nE9T6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"QuoteItem_item__2dOvb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"noquotes\":\"NoQuotesFound_noquotes__3DIYb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__1m44e\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Layout_main__auk_r\"};","import { useReducer, useCallback } from 'react';\n\nfunction httpReducer(state, action) {\n  if (action.type === 'SEND') {\n    return {\n      data: null,\n      error: null,\n      status: 'pending',\n    };\n  }\n\n  if (action.type === 'SUCCESS') {\n    return {\n      data: action.responseData,\n      error: null,\n      status: 'completed',\n    };\n  }\n\n  if (action.type === 'ERROR') {\n    return {\n      data: null,\n      error: action.errorMessage,\n      status: 'completed',\n    };\n  }\n\n  return state;\n}\n\nfunction useHttp(requestFunction, startWithPending = false) {\n  const [httpState, dispatch] = useReducer(httpReducer, {\n    status: startWithPending ? 'pending' : null,\n    data: null,\n    error: null,\n  });\n\n  const sendRequest = useCallback(\n    async function (requestData) {\n      dispatch({ type: 'SEND' });\n      try {\n        const responseData = await requestFunction(requestData);\n        dispatch({ type: 'SUCCESS', responseData });\n      } catch (error) {\n        dispatch({\n          type: 'ERROR',\n          errorMessage: error.message || 'Something went wrong!',\n        });\n      }\n    },\n    [requestFunction]\n  );\n\n  return {\n    sendRequest,\n    ...httpState,\n  };\n}\n\nexport default useHttp;\n","const FIREBASE_DOMAIN = 'https://quote-app-9b5cf-default-rtdb.firebaseio.com';\n\nexport async function getAllQuotes() {\n  const response = await fetch(`${FIREBASE_DOMAIN}/quotes.json`);\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || 'Could not fetch quotes.');\n  }\n\n  const transformedQuotes = [];\n\n  for (const key in data) {\n    const quoteObj = {\n      id: key,\n      ...data[key],\n    };\n\n    transformedQuotes.push(quoteObj);\n  }\n\n  return transformedQuotes;\n}\n\nexport async function getSingleQuote(quoteId) {\n  const response = await fetch(`${FIREBASE_DOMAIN}/quotes/${quoteId}.json`);\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || 'Could not fetch quote.');\n  }\n\n  const loadedQuote = {\n    id: quoteId,\n    ...data,\n  };\n\n  return loadedQuote;\n}\n\nexport async function addQuote(quoteData) {\n  const response = await fetch(`${FIREBASE_DOMAIN}/quotes.json`, {\n    method: 'POST',\n    body: JSON.stringify(quoteData),\n    headers: {\n      'Content-Type': 'application/json',\n    },\n  });\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || 'Could not create quote.');\n  }\n\n  return null;\n}\n\nexport async function addComment(requestData) {\n  const response = await fetch(`${FIREBASE_DOMAIN}/comments/${requestData.quoteId}.json`, {\n    method: 'POST',\n    body: JSON.stringify(requestData.commentData),\n    headers: {\n      'Content-Type': 'application/json',\n    },\n  });\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || 'Could not add comment.');\n  }\n\n  return { commentId: data.name };\n}\n\nexport async function getAllComments(quoteId) {\n  const response = await fetch(`${FIREBASE_DOMAIN}/comments/${quoteId}.json`);\n\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || 'Could not get comments.');\n  }\n\n  const transformedComments = [];\n\n  for (const key in data) {\n    const commentObj = {\n      id: key,\n      ...data[key],\n    };\n\n    transformedComments.push(commentObj);\n  }\n\n  return transformedComments;\n}\n","import classes from './LoadingSpinner.module.css';\n\nconst LoadingSpinner = () => {\n  return <div className={classes.spinner}></div>;\n}\n\nexport default LoadingSpinner;\n","import { useRef, useEffect } from 'react';\nimport useHttp from '../../hooks/use-http';\nimport { addComment } from '../../lib/api';\nimport classes from './NewCommentForm.module.css';\nimport LoadingSpinner from '../UI/LoadingSpinner';\n\nconst NewCommentForm = (props) => {\n  const commentTextRef = useRef();\n  const { sendRequest, status, error} = useHttp(addComment);\n  const { onAddedComment } = props;\n\n  useEffect(() => {\n    if(status === 'completed' && !error){\n      onAddedComment();\n    }\n  }, [status, error, onAddedComment]);\n\n  const submitFormHandler = (event) => {\n    event.preventDefault();\n    const enteredText = commentTextRef.current.value;\n    sendRequest({ commentData: { text: enteredText }, quoteId: props.quoteId});\n  };\n\n  return (\n    <form className={classes.form} onSubmit={submitFormHandler}>\n      {status === 'pending' && (\n        <div className=\"centered\">\n          <LoadingSpinner />\n        </div>\n      )}\n      <div className={classes.control} onSubmit={submitFormHandler}>\n        <label htmlFor='comment'>Your Comment</label>\n        <textarea id='comment' rows='5' ref={commentTextRef}></textarea>\n      </div>\n      <div className={classes.actions}>\n        <button className='btn'>Add Comment</button>\n      </div>\n    </form>\n  );\n};\n\nexport default NewCommentForm;\n","import classes from './CommentItem.module.css';\n\nconst CommentItem = (props) => {\n  return (\n    <li className={classes.item}>\n      <p>{props.text}</p>\n    </li>\n  );\n};\n\nexport default CommentItem;\n","import CommentItem from './CommentItem';\nimport classes from './CommentsList.module.css';\n\nconst CommentsList = (props) => {\n  return (\n    <ul className={classes.comments}>\n      {props.comments.map((comment) => (\n        <CommentItem key={comment.id} text={comment.text} />\n      ))}\n    </ul>\n  );\n};\n\nexport default CommentsList;\n","import { useState, useEffect, useCallback } from 'react';\nimport classes from './Comments.module.css';\nimport NewCommentForm from './NewCommentForm';\nimport { useParams } from 'react-router-dom';\nimport useHttp from '../../hooks/use-http';\nimport { getAllComments } from '../../lib/api';\nimport LoadingSpinner from '../UI/LoadingSpinner';\nimport CommentsList from './CommentsList';\n\nconst Comments = () => {\n  const [isAddingComment, setIsAddingComment] = useState(false);\n  const params = useParams();\n  const {sendRequest, status, data: loadedComments, error} = useHttp(getAllComments);\n  const {quoteId} = params;\n\n  useEffect(() => {\n    sendRequest(quoteId)\n  },[quoteId, sendRequest]);\n\n  const startAddCommentHandler = () => {\n    setIsAddingComment(true);\n  };\n\n  const addedCommentHandler = useCallback(() => {\n    sendRequest(quoteId);\n  }, [sendRequest, quoteId]);\n\n  let comments;\n  if(status === 'pending'){\n    comments = <div className=\"centered\"><LoadingSpinner /></div>\n  }\n\n  if(status === 'completed' && loadedComments){\n    comments = <CommentsList comments={loadedComments}/>\n  }\n\n  if(status === 'completed' && (!loadedComments || loadedComments.length === 0)){\n    comments = <p className=\"centered\">No comments have been added yet!</p>;\n  }\n  \n  return (\n    <section className={classes.comments}>\n      <h2>User Comments</h2>\n      {!isAddingComment && (\n        <button className='btn' onClick={startAddCommentHandler}>\n          Add a Comment\n        </button>\n      )}\n      {isAddingComment && <NewCommentForm quoteId={params.quoteId} onAddedComment={addedCommentHandler}/>}\n      {comments}\n    </section>\n  );\n};\n\nexport default Comments;\n","import classes from './HighlightedQuote.module.css';\n\nconst HighlightedQuote = (props) => {\n  return (\n    <figure className={classes.quote}>\n      <p>{props.text}</p>\n      <figcaption>{props.author}</figcaption>\n    </figure>\n  );\n};\n\nexport default HighlightedQuote;\n","import { useParams, Route, Link, useRouteMatch } from 'react-router-dom';\nimport { Fragment, useEffect } from 'react';\nimport Comments from '../comments/Comments';\nimport HighlightedQuote from '../quotes/HighlightedQuote';\nimport useHttp from '../../hooks/use-http';\nimport { getSingleQuote } from '../../lib/api';\nimport LoadingSpinner from '../UI/LoadingSpinner';\nconst QuoteDetail = () => {\n    const params = useParams();\n    const match = useRouteMatch();\n    const { quoteId } = params;\n    const { sendRequest, status, data: loadedQuote, error } = useHttp(getSingleQuote, true);\n\n    useEffect(() => {\n        sendRequest(quoteId);\n    },[sendRequest, quoteId]);\n\n    if(status === 'pending'){\n        return(\n            <div className=\"centered\">\n                <LoadingSpinner />\n            </div>\n        );\n    }\n\n    if(error){\n        return(\n            <p className=\"centered\">{error}</p>\n        )\n    }\n    if(!loadedQuote.text){\n        return <p className=\"centered\">No quote found!</p>;\n    }\n\n    return (\n        <Fragment>\n            <HighlightedQuote text={loadedQuote.text} author={loadedQuote.author}/>\n            <Route path={match.path} exact>\n                <div className=\"centered\">\n                    <Link className='btn--flat' to={`${match.url}/comments`}>Load Comments</Link>\n                </div>\n            </Route>\n            <Route path={`${match.path}/comments`}>\n                <Comments />\n            </Route>\n        </Fragment>\n    );\n};\n\nexport default QuoteDetail;","import { Link } from 'react-router-dom';\nimport classes from './QuoteItem.module.css';\n\nconst QuoteItem = (props) => {\n  return (\n    <li className={classes.item}>\n      <figure>\n        <blockquote>\n          <p>{props.text}</p>\n        </blockquote>\n        <figcaption>{props.author}</figcaption>\n      </figure>\n      <Link className='btn' to={`/quotes/${props.id}`}>\n        View Fullscreen\n      </Link>\n    </li>\n  );\n};\n\nexport default QuoteItem;\n","import { Fragment } from 'react';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport QuoteDetail from '../pages/QuoteDetail';\nimport QuoteItem from './QuoteItem';\nimport classes from './QuoteList.module.css';\n\nconst sortQuotes = (quotes, ascending) => {\n  return quotes.sort((quoteA, quoteB) => {\n    if(ascending){\n      return quoteA.id > quoteB.id ? 1 : -1;\n    }\n    else{\n      return quoteA.id < quoteB.id ? 1 : -1;\n    }\n  });\n};\n\nconst QuoteList = (props) => {\n  const history = useHistory();\n  const location = useLocation();\n  console.log(\"location: \", location);\n  const queryParams = new URLSearchParams(location.search);\n  const isSortingAscending = queryParams.get('sort') === 'asc';\n  const sortedQuotes = sortQuotes(props.quotes, isSortingAscending);\n\n  const changeSortingHandler = () => {\n    history.push({\n      pathname: location.pathname,\n      search: `?sort=${(isSortingAscending ? 'desc' : 'asc')}`\n    });\n  };\n  \n  return (\n    <Fragment>\n      <div className={classes.sorting}>\n        <button onClick={changeSortingHandler}>Sort {isSortingAscending ? 'Descending' : 'Ascending'}</button>\n      </div>\n      <ul className={classes.list}>\n        {sortedQuotes.map((quote) => (\n          <QuoteItem\n            key={quote.id}\n            id={quote.id}\n            author={quote.author}\n            text={quote.text}\n          />\n        ))}\n      </ul>\n    </Fragment>\n  );\n};\n\nexport default QuoteList;\n","import classes from './NoQuotesFound.module.css';\n\nconst NoQuotesFound = () => {\n  return (\n    <div className={classes.noquotes}>\n      <p>No quotes found!</p>\n      <a className='btn'>\n        Add a Quote\n      </a>\n    </div>\n  );\n};\n\nexport default NoQuotesFound;\n","import QuoteList from '../quotes/QuoteList';\nimport LoadingSpinner from '../UI/LoadingSpinner';\nimport useHttp from '../../hooks/use-http';\nimport { getAllQuotes } from '../../lib/api';\nimport { useEffect } from 'react';\nimport NoQuotesFound from '../quotes/NoQuotesFound';\n\nconst AllQuotes = () => {\n    const { sendRequest, status, data: loadedQuotes, error } = useHttp(getAllQuotes, true);\n    useEffect(() => {\n        sendRequest();\n    }, [sendRequest]);\n\n    if(status === 'pending'){\n        return(\n            <div className=\"centered\">\n                <LoadingSpinner />    \n            </div>\n        )\n    }\n\n    if(error){\n        return(\n            <p className=\"centered focused\">\n                {error}\n            </p>\n        )\n    }\n\n    if(status === 'completed' && (!loadedQuotes || loadedQuotes.length === 0)){\n        return <NoQuotesFound />\n    };\n\n    return (\n        <QuoteList quotes={loadedQuotes}/>\n    );\n};\n\nexport default AllQuotes;","import classes from './Card.module.css';\n\nconst Card = (props) => {\n  return <div className={classes.card}>{props.children}</div>;\n};\n\nexport default Card;\n","import { useRef, useState, Fragment } from 'react';\nimport { Prompt } from 'react-router-dom';\nimport Card from '../UI/Card';\nimport LoadingSpinner from '../UI/LoadingSpinner';\nimport classes from './QuoteForm.module.css';\n\nconst QuoteForm = (props) => {\n  const [isEntering, setIsEntering] = useState(false);\n  const authorInputRef = useRef();\n  const textInputRef = useRef();\n\n  function submitFormHandler(event) {\n    event.preventDefault();\n\n    const enteredAuthor = authorInputRef.current.value;\n    const enteredText = textInputRef.current.value;\n\n    // optional: Could validate here\n\n    props.onAddQuote({ author: enteredAuthor, text: enteredText });\n  }\n\n  const formFocusedHandler = () => {\n    console.log('focused');\n    setIsEntering(true);\n  };\n\n  return (\n    <Fragment>\n      <Prompt when={isEntering} message={(location) => 'Are you sure you want to leave? Any entered data will be lost.'}/>\n      <Card>\n        <form onFocus={formFocusedHandler} className={classes.form} onSubmit={submitFormHandler}>\n          {props.isLoading && (\n            <div className={classes.loading}>\n              <LoadingSpinner />\n            </div>\n          )}\n\n          <div className={classes.control}>\n            <label htmlFor='author'>Author</label>\n            <input type='text' id='author' ref={authorInputRef} />\n          </div>\n          <div className={classes.control}>\n            <label htmlFor='text'>Text</label>\n            <textarea id='text' rows='5' ref={textInputRef}></textarea>\n          </div>\n          <div className={classes.actions}>\n            <button className='btn'>Add Quote</button>\n          </div>\n        </form>\n      </Card>\n    </Fragment>\n  );\n};\n\nexport default QuoteForm;\n","import { useHistory } from 'react-router-dom';\nimport QuoteForm from '../quotes/QuoteForm';\nimport useHttp from '../../hooks/use-http';\nimport { addQuote } from '../../lib/api';\nimport { useEffect} from 'react';\n\nconst NewQuote = () => {\n    const { sendRequest, status } = useHttp(addQuote);\n    const history = useHistory();\n\n    useEffect(() => {\n        if(status === 'completed'){\n            history.push('/quotes');\n        }\n    }, [status, history]);\n\n    const addQuoteHandler = quoteData => {\n        sendRequest(quoteData);\n    };\n\n    return (\n        <QuoteForm isLoading={status === 'pending'} onAddQuote={addQuoteHandler}/>\n    );\n};\n\nexport default NewQuote;","import { NavLink } from 'react-router-dom';\nimport classes from './MainNavigation.module.css';\n\nconst MainNavigation = () => {\n    return(\n        <header className={classes.header}>\n            <div className={classes.logo}>Great Quotes</div>\n            <nav className={classes.nav}>\n                <ul>\n                    <li>\n                        <NavLink to=\"/quotes\" activeClassName={classes.active}>All Quotes</NavLink>\n                    </li>\n                    <li>\n                        <NavLink to=\"/new-quote\" activeClassName={classes.active}>Add a Quote</NavLink>\n                    </li>\n                </ul>\n            </nav>\n        </header>\n    );\n}\n\nexport default MainNavigation;","import { Fragment } from 'react';\nimport MainNavigation from './MainNavigation';\nimport classes from './Layout.module.css';\n\nconst Layout = (props) => {\n    return (\n        <Fragment>\n            <MainNavigation />\n            <main className={classes.main}>\n                {props.children}\n            </main>\n        </Fragment>\n    );\n}\n\nexport default Layout;","const NotFound = () => {\n    return(\n        <div className=\"centered\">\n            <p>Page not found!</p>\n        </div>\n    );\n}\n\nexport default NotFound;","import { Route, Switch, Redirect } from 'react-router-dom';\nimport AllQuotes from './components/pages/AllQuotes';\nimport NewQuote from './components/pages/NewQuote';\nimport QuoteDetail from './components/pages/QuoteDetail';\nimport Layout from './components/layout/Layout';\nimport NotFound from './components/pages/NotFound';\n\nfunction App() {\n  return (\n    <div>\n      <Layout>\n        <Switch>\n          <Route path=\"/\" exact>\n            <Redirect to=\"/quotes\" />\n          </Route>\n          <Route path=\"/quotes\" exact>\n            <AllQuotes />\n          </Route>\n          <Route path=\"/quotes/:quoteId\">\n            <QuoteDetail />\n          </Route>\n          <Route path=\"/new-quote\">\n            <NewQuote />\n          </Route>\n          <Route path='*'>\n            <NotFound />\n          </Route>\n        </Switch>\n      </Layout>\n    </div>\n  );\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<BrowserRouter><App /></BrowserRouter>, document.getElementById('root'));\n"],"sourceRoot":""}